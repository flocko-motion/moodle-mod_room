{"version":3,"sources":["../src/slot_duplication.js"],"names":["define","LoadingIcon","Ajax","Notification","numberOfDuplicatesField","document","querySelector","duplicationPreview","submitButton","init","cmId","eventId","getSlotDuplicatesPreview","innerHTML","setAttribute","numberOfDuplicates","Math","floor","value","max","min","loadingicon","addIconToContainerWithPromise","request","methodname","args","cmid","eventid","n_duplicates","call","then","response","resolve","message","createElement","className","classList","add","textContent","append","slots","duplicatePreviewTable","forEach","slot","row","insertRow","insertCell","name","time","removeAttribute","fail","exception","addEventListener"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manager for slot duplication tool.\n *\n * @package    mod_room\n * @copyright  2020 Leo Auri <code@leoauri.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n    'core/loadingicon',\n    'core/ajax',\n    'core/notification',\n], function(\n    LoadingIcon,\n    Ajax,\n    Notification,\n) {\n    const numberOfDuplicatesField = document.querySelector('#id_numberofduplicates');\n    const duplicationPreview = document.querySelector('#mod-room-duplication-preview');\n    const submitButton = document.querySelector('#id_submitbutton');\n\n    return {\n        init: function(cmId, eventId) {\n            const getSlotDuplicatesPreview = function() {\n                duplicationPreview.innerHTML = '';\n                submitButton.setAttribute('disabled', 'disabled');\n\n                // trim numberOfDuplicatesField.value, make int, test has value\n                let numberOfDuplicates = Math.floor(numberOfDuplicatesField.value);\n                if (!numberOfDuplicates) { return; }\n\n                // clamp to max 24 duplicates, min 1\n                numberOfDuplicates = Math.max(Math.min(numberOfDuplicates, 24), 1);\n\n                const loadingicon = LoadingIcon.addIconToContainerWithPromise(duplicationPreview);\n\n                const request = {\n                    methodname: 'mod_room_duplication_preview',\n                    args: {\n                        cmid: cmId,\n                        eventid: eventId,\n                        n_duplicates: numberOfDuplicates\n                    }\n                };\n\n                Ajax.call([request])[0]\n                    .then(response => {\n                        loadingicon.resolve();\n                        duplicationPreview.innerHTML = '';\n\n                        // If n_duplicates field no longer holds equivalent value, abort here.\n                        // Another callback must be handling it\n                        if (\n                            numberOfDuplicates !==\n                            Math.max(Math.min(Math.floor(numberOfDuplicatesField.value), 24), 0)\n                        ) {\n                            return;\n                        }\n\n                        // Create element for response message\n                        if (response.message) {\n                            let message = document.createElement('div');\n                            message.className = 'mod-room-duplication-preview-message';\n                            message.classList.add('col-md-3');\n                            message.textContent = response.message;\n                            duplicationPreview.append(message);\n                        }\n\n                        // put each result in a list with time\n                        if (response.slots) {\n                            let duplicatePreviewTable = document.createElement('table');\n                            duplicatePreviewTable.classList.add('col-md-9', 'form-inline', 'felement');\n                            duplicationPreview.append(duplicatePreviewTable);\n\n                            response.slots.forEach(slot => {\n                                let row = duplicatePreviewTable.insertRow();\n                                row.insertCell().textContent = slot.name;\n                                row.insertCell().textContent = slot.time;\n                            });\n                        }\n\n                        submitButton.removeAttribute('disabled');\n                    })\n                    .fail(Notification.exception);\n            };\n\n            getSlotDuplicatesPreview();\n            numberOfDuplicatesField.addEventListener('input', getSlotDuplicatesPreview);\n        }\n    };\n});\n"],"file":"slot_duplication.min.js"}